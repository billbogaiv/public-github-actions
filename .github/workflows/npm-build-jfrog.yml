name: Build (NPM)

# Execute '`npm run build`' against the package.json file.  There is
# support for package.json files that are named otherwise or do not exist
# at the root of the repository.  This workflow *only* runs the build script.
#
# At the end of the job, it bundles up the entire workspace into a `.tgz`
# file for use in later jobs.  This reduces the amount of time needed to
# run tests, security scans, or the 'npm pack' command later on.
#
# The disadvantage of separate jobs is cost.  You are billed a minimum of
# one minute of runtime for every job in a workflow.  But the advantage is
# the ability to perform job steps in parallel (such as tests) and process
# isolation.

permissions:
  contents: read
  id-token: write
  packages: read

on:

  workflow_call:

    inputs:

      node_version:
        description: The node version to install such as '18.x'.  It is best to stick to LTS releases of nodejs to avoid slow build times.
        required: false
        type: string
        default: '18.x'

      jfrog_api_base_url:
        description: 'JFrog platform url (for example: https://rimdev.jfrog.io/)'
        required: true
        type: string

      jfrog_build_name:
        description: 'JFrog build name.'
        required: true
        type: string

      jfrog_build_number:
        description: 'JFrog build number. Can be an integer, a semantic version, or a string.'
        required: true
        type: string

      jfrog_cli_log_level:
        description: 'Set the log level for the JFrog CLI. Default is ERROR. Values are: (DEBUG, INFO, WARN, ERROR).'
        required: false
        default: ERROR
        type: string

      jfrog_npm_feed_repo:
        description: The 'virtual' JFrog Artifactory repository identifier for NPM package retrieval.
        required: true
        type: string

      jfrog_oidc_provider_name:
        description: The OIDC Integration Provider Name to use for authentication from the GitHub Action to the JFrog instance.
        required: true
        type: string

      package_json_filename:
        description: Name of the 'package.json' file if not the default name.
        required: false
        type: string
        default: package.json

      persisted_workspace_artifact_suffix:
        description: By default, each persisted workspace artifact gets a random suffix appended to the base name.  This input can be used to provide a more meaningful name suffix.
        default:
        type: string
        required: false

      project_directory:
        description: Location of the package.json file for the NPM package.
        required: false
        type: string
        default: ./

    outputs:

      jfrog_build_name:
        description: The JFrog build name for this job.
        value: ${{ jobs.build.outputs.jfrog_build_name }}

      persisted_workspace_artifact_name:
        description: Name of the artifact which contains the persisted workspace directory.
        value: ${{ jobs.build.outputs.persisted_workspace_artifact_name }}

      project_directory:
        value: ${{ inputs.project_directory }}

jobs:

  build:
    name: Build (NPM)
    runs-on: ubuntu-latest
    defaults:
      run:
          working-directory: ${{ inputs.project_directory }}

    outputs:
      jfrog_build_name: ${{ env.JFROG_CLI_BUILD_NAME }}
      persisted_workspace_artifact_name: ${{ steps.persist-workspace.outputs.artifact_name }}

    env:
      PACKAGEJSONFILENAME: ${{ inputs.package_json_filename }}
      PROJECTDIRECTORY: ${{ inputs.project_directory }}
      JFROG_API_BASE_URL: ${{ inputs.jfrog_api_base_url }}
      JFROG_CLI_BUILD_NAME: "${{ inputs.jfrog_build_name }}-npm-build"
      JFROG_CLI_BUILD_NUMBER: ${{ inputs.jfrog_build_number }}
      JFROG_CLI_LOG_LEVEL: ${{ inputs.jfrog_cli_log_level }}
      JFROG_NPM_FEED_REPO: ${{ inputs.jfrog_npm_feed_repo }}
      JFROG_OIDC_PROVIDER_NAME: ${{ inputs.jfrog_oidc_provider_name }}

    steps:

      - name: Validate inputs.jfrog_build_name
        uses: ritterim/public-github-actions/actions/regex-validator@v1.16.2
        with: # This regex pattern is a bit of a guess
          regex_pattern: '^[A-Za-z0-9\-]{5,55}$'
          value: ${{ inputs.jfrog_build_name }}

      - name: Validate inputs.jfrog_npm_feed_repo
        uses: ritterim/public-github-actions/actions/jfrog-artifactory-repository-name-validator@v1.16.2
        with:
          name: ${{ env.JFROG_NPM_FEED_REPO }}

      - name: Validate inputs.jfrog_oidc_provider_name
        uses: ritterim/public-github-actions/actions/regex-validator@v1.16.2
        with: # This regex pattern is a bit of a guess
          regex_pattern: '^[A-Za-z0-9\-]{5,55}$'
          value: ${{ env.JFROG_OIDC_PROVIDER_NAME }}

      - name: Validate inputs.package_json_filename
        uses: ritterim/public-github-actions/actions/file-name-validator@v1.16.2
        with:
          file_name: ${{ env.PACKAGEJSONFILENAME }}

      - name: Validate inputs.project_directory
        uses: ritterim/public-github-actions/actions/path-name-validator@v1.16.2
        with:
          path_name: ${{ env.PROJECTDIRECTORY }}

      - name: github context debug information
        working-directory: ./
        run: |
          echo "github.base_ref=${{ github.base_ref }}"
          echo "github.head_ref=${{ github.head_ref }}"
          echo "github.ref=${{ github.ref }}"
          echo "github.ref_name=${{ github.ref_name }}"
          echo "github.repository=${{ github.repository }}"
          echo "github.repository_owner=${{ github.repository_owner }}"
          echo "github.run_id=${{ github.run_id }}"
          echo "github.run_number=${{ github.run_number }}"
          echo "github.run_attempt=${{ github.run_attempt }}"
          echo "github.sha=${{ github.sha }}"

      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      # This creates the setup-jfrog-cli-server server ID
      - name: Install JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JFROG_API_BASE_URL }}
        with:
          oidc-provider-name: ${{ env.JFROG_OIDC_PROVIDER_NAME }}

      - name: jf config show
        run: jf config show

      # See this for why setup-node can be slow: https://github.com/actions/setup-node/issues/726#issuecomment-1527198808
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.project_directory }}/${{ inputs.package_json_filename }}

      - name: Check NPM configuration, registry, etc.
        run: |
          npm config list
          npm config get registry

      - name: Configure NPM using JFrog CLI
        run: jf npm-config --global --server-id-resolve setup-jfrog-cli-server --repo-resolve "${JFROG_NPM_FEED_REPO}"

      - name: Check NPM configuration, registry, etc.
        run: |
          npm config list
          npm config get registry

      - run: git rev-parse --verify HEAD

      # https://jfrog.com/help/r/artifactory-how-to-troubleshoot-long-npm-install-times-with-s3-redirect-enabled/artifactory-how-to-troubleshoot-long-npm-install-times-with-s3-redirect-enabled
      # > sometimes the npm install process will appear to hang for several minutes, causing long build times for npm projects
      # > Any npm configuration flag that disables the progress bar will alleviate this issue
      - run: jf npm ci --npm-args="--no-progress"

      - run: jf npm run build

      - run: ls -la

      - name: Persist Workspace
        id: persist-workspace
        uses: ritterim/public-github-actions/forks/persist-workspace@v1.16.3
        with:
          artifact_name_suffix: ${{ inputs.persisted_workspace_artifact_suffix }}

      - name: Collect JFrog Build Information
        run: jf rt build-collect-env "${JFROG_CLI_BUILD_NAME}" "${JFROG_CLI_BUILD_NUMBER}"

      - name: Collect JFrog 'git' Information
        run: jf rt build-add-git "${JFROG_CLI_BUILD_NAME}" "${JFROG_CLI_BUILD_NUMBER}"

      - name: Push JFrog Build Information
        run: jf rt build-publish "${JFROG_CLI_BUILD_NAME}" "${JFROG_CLI_BUILD_NUMBER}"
