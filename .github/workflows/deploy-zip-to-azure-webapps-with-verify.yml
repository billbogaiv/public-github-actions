name: Azure Zip Deploy

# Push the zip file artifact to an Azure Web App slot using a federated Entra ID.
# This also checks for a version string or git hash at a given endpoint to validate
# that the slot is running the correct version.  If the slot is healthy, but running
# the wrong version, this will reboot the slot then check again.

# Sometimes Azure Web App instances (mostly under Linux) go into zombie mode where
# the zip deploy doesn't trigger a restart to load the new artifact.

on:
  workflow_call:
    inputs:
      artifact_name:
        required: true
        type: string
        
      artifact_filename:
        required: true
        type: string

      azure_web_app_slot_name:
        required: false
        type: string
        default: 'production'

      azure_web_app_deploy_subscription_id:
        required: true
        type: string

      azure_web_app_name:
        required: true
        type: string

      azure_web_app_resource_group_name:
        required: true
        type: string

      environment_name:
        required: false
        type: string
        default: ''

      expected_version_string:
        description: The version string that should be found somewhere in the output of a version endpoint.  Good choices are the git hash of the commit that produced the aritfact or the informational version which includes the git short hash as a suffix.
        required: true
        type: string

jobs:

  azure-webapps-zip-deploy:
    name: Azure Zip Deploy
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment_name }}

    env:
      AZUREDEPLOYSUBSCRIPTIONID: ${{ inputs.azure_web_app_deploy_subscription_id }}

    steps:

      - name: Validate inputs.azure_web_app_deploy_subscription_id
        uses: ritterim/public-github-actions/actions/guid-validator@v1.16.2
        with:
          guid: ${{ env.AZUREDEPLOYSUBSCRIPTIONID }}

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}

      - run: ls -la

      - uses: azure/login@v2
        with:
          client-id: ${{ vars.ARTIFACT_DEPLOYER_AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.ARTIFACT_DEPLOYER_AZURE_TENANT_ID }}
          subscription-id: ${{ vars.ARTIFACT_DEPLOYER_AZURE_SUBSCRIPTION_ID }}

      # The azure/webapps-deploy action doesn't seem to provide a way to specify the subscription ID.
      # Unless we change the default subscription, it will fail to find the app-name.
      - run: az account set --subscription "${AZUREDEPLOYSUBSCRIPTIONID}"

      - name: Zip Deploy to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ inputs.azure_web_app_name }}
          slot-name: ${{ inputs.azure_web_app_slot_name }}
          package: ${{ inputs.artifact_filename }}

      # Validate that the expected version is actually running in the slot post-deploy.
      # This catches any problems where the application slot did not restart as expected post-deploy.
      # Tends to only happen on Linux Azure Web App instances.
      - name: Check for expected version in the deployed slot.
        uses: ritterim/public-github-actions/actions/health-and-version-check@v1.17.3
        with:
          azure_web_app_name: ${{ inputs.azure_web_app_name }}
          azure_web_app_resource_group_name: ${{ inputs.azure_web_app_resource_group_name }}
          azure_web_app_slot_name: ${{ inputs.azure_web_app_slot_name }}
          azure_web_app_deploy_subscription_id: ${{ inputs.azure_web_app_deploy_subscription_id }}
          expected_version_string: ${{ inputs.expected_version_string }}
