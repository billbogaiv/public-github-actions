name: Generate GitHub Token from GitHub App

# Generates a GITHUB_TOKEN from a GitHub Application registered for the 
# organization.  The list of requested permissions can be customized.
#
# Notes: 
# 
# - Because of how GitHub takes efforts to protect GitHub Tokens from being 
# passed between jobs, we have to encrypt/obfuscate the token.  Doing this 
# in a separate job is still useful because it limits exposure of the GitHub 
# App's private key to just this job runner.  The other job steps which 
# consume the token have no way to request a higher level set of permissions.
# 
# - As late as Aug 2023, GitHub App tokens can NOT be used to access 
# GitHub Packages.

permissions:
  id-token: write

on:

  workflow_call:

    inputs:

      gh_app_id:
        description: The GitHub Application ID.
        type: string
        required: true

      permissions:
        description: The JSON-stringified permissions granted to the token (defaults to all the GitHub app permissions, see https://docs.github.com/en/rest/apps/apps#create-an-installation-access-token-for-an-app).
        type: string
        required: false
        default:

    secrets:

      gh_actions_secret_passing_passphrase:
        description: The random password (usually secrets.ACTIONS_SECRET_PASSING_PASSPHRASE) used to encrypt values to be passed between job steps.
        required: true

      gh_app_private_key:
        description: The private secret generated after creation of the GitHub Application.  It is generated in the "Private keys" section of the settings page for the application.
        required: true

    outputs:

      gh_encrypted_token:
        description: The GitHub token generated by the GitHub Application.  This is an encrypted value that must be decrypted by the other workflow.
        value: ${{ jobs.generate-token.outputs.gh_encrypted_token }}

jobs:

  generate-token:
    name: Generate Token
    runs-on: ubuntu-latest

    env:
      ACTIONS_SECRET_PASSING_PASSPHRASE: ${{ secrets.gh_actions_secret_passing_passphrase }}
      ENCRYPTED_GITHUB_TOKEN: not-yet-set

    outputs:
      gh_encrypted_token: ${{ steps.set-outputs.outputs.gh_encrypted_token }}

    steps:

      - name: Generate GH Token from GH App
        id: generate_token
        uses: ritterim/public-github-actions/forks/github-app-token@v1.17
        with:
          app_id: ${{ inputs.gh_app_id }}
          private_key: ${{ secrets.gh_app_private_key }}
          permissions: ${{ inputs.permissions }}
          #repository: ritterim/content-search-component

      - name: Use Generated GITHUB_TOKEN
        run: echo "GITHUB_TOKEN=${{ steps.generate_token.outputs.token }}" >> $GITHUB_ENV

      - name: gh auth status
        run: gh auth status

      - run: |
          ENCRYPTED_GITHUB_TOKEN=$(echo -n '${{ steps.generate_token.outputs.token }}' | openssl enc -aes-256-cbc -pbkdf2 -pass env:ACTIONS_SECRET_PASSING_PASSPHRASE | base64 --wrap=0)
          echo "ENCRYPTED_GITHUB_TOKEN=$ENCRYPTED_GITHUB_TOKEN"
          echo "ENCRYPTED_GITHUB_TOKEN=$ENCRYPTED_GITHUB_TOKEN" >> $GITHUB_ENV

      - name: Set outputs
        id: set-outputs
        run: |
          echo "gh_encrypted_token=${{ env.ENCRYPTED_GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
